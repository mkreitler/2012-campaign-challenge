%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (U2) ()
%%Title: (91a11151742.eps)
%%CreationDate: 11/15/2009 5:43 PM
%%BoundingBox: 3 3 1196 1197
%%HiResBoundingBox: 3.99951 3.99805 1196 1196.002
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([\721\756\742\754\745\771\745\755\750\745] 1)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 0 0 1200 1200
%AI3_TemplateBox: 600 600 600 600
%AI3_TileBox: 313.8999 191.7197 885.0996 1009.3999
%AI3_DocumentPreview: Header
%AI5_ArtSize: 14400 14400
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -999.5 1695.5 0.25 1213 691 18 1 0 67 79 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-6600.5 -6599.5
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (TracingSuite.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS3) (FILTERiT4 Live Trail ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS3) (FILTERiT4 Live Tiling ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS3) (FILTERiT4 Live Shadow ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS3) (FILTERiT4 Live Reflections ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS3) (FILTERiT4 Live Neon ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS3) (FILTERiT4 Live Generation ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS3) (FILTERiT4 Live Galaxy ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS3) (FILTERiT4 Live Frame ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS3) (FILTERiT4 Live Explosion ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS3) (FILTERiT4 Live Emboss ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS3) (FILTERiT4 Live Cutout ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS3) (FILTERiT4 Live Circle ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS3) (FILTERiT4 Live Border ver4.2 for Win AICS3) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI5_End_NonPrinting--
14 Bn
%AI5_BeginGradient: (New Gradient Swatch 107)
(New Gradient Swatch 107) 0 2 Bd
[
<
17151412110F0E0C0B090706050403010000
>
<
100F0E0D0C0B0A0908060505040302010000
>
<
0F0E0D0C0B0A0A0908060505040302010000
>
0
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
<
EDEEEFF0F1F2F3F4F5F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
0.090196 0.062745 0.058824 0 0.929412 0.929412 0.929412 2 50 0 %_BS
%_0.090196 0.062745 0.058824 0 0.929412 0.929412 0.929412 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001010101010101010101010103030303030303030404040404040505050505
05060606060607070707090909090A0A0A0B0B0B0B0C0C0C0E0E0E0F0F1111111212141415151517
17181819191A1B1B1C1C1D1D1F202021222223242425262828292A2B2C2C2D2E2F30323334363738
3A3B3C3D3E40414243454648494A4C4D4E505152545557595A5D5E61626567686A6C6D6F71727477
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001010101010101010101010102020202020202020303030303030404040404
0405050505050505050506060606070707080808080909090A0A0A0B0B0C0C0C0D0D0E0E0F0F0F10
101111121213131314141515161717181919191A1A1B1C1D1D1E1E1F202021222323242526272829
2A2B2C2D2E2F30313234353637383A3A3B3D3E3F414243454648494C4D4E5051535556585A5B5D5F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001010101010101010101010102020202020202020303030303030404040404
0405050505050505050506060606070707080808080909090A0A0A0A0A0B0B0B0C0C0D0D0E0E0E0F
0F10101010111212131314141515151617171819191A1B1B1B1C1D1E1F1F20212122232425262728
292A2B2C2D2D2E2F2F3132323334363737393A3B3D3D3E404143444647494B4C4E4F505254545658
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000001010102
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFA
FAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0EFEFEEEEEEED
EDECECEBEBEAE9E9E8E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0
CFCECDCCCBCAC9C8C7C5C4C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFADACAAA8A7A5A3A2A09E9D9B99
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFA
FAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0EFEFEEEEEEED
EDECECEBEBEAE9E9E8E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0
CFCECDCCCBCAC9C8C7C5C4C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFADACAAA8A7A5A3A2A09E9D9B99
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFA
FAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F2F2F1F1F1F0F0EFEFEEEEEEED
EDECECEBEBEAE9E9E8E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D6D5D4D3D2D1D0
CFCECDCCCBCAC9C8C7C5C4C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFADACAAA8A7A5A3A2A09E9D9B99
>
4 %_Br
[
0 0 0 0 1 1 1 2 85 1.1236 %_BS
%_0 0 0 0 1 1 1 2 85 1.1236 Bs
0.466667 0.372549 0.345098 0.007843 0.6 0.6 0.6 2 50 100 %_BS
%_0.466667 0.372549 0.345098 0.007843 0.6 0.6 0.6 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F1112141517181A1B1C1D1F2021222324252628292A2B2C2D2E
>
<
0000010203040505060708090A0B0C0D0E0F10111313141516171819191A1B1C1D1E1E1F202122
>
<
0000010203040505060708090A0A0B0C0D0E0F10111213141515161718191A1B1B1C1D1E1F2021
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
>
4 %_Br
[
0.180392 0.133333 0.129412 0 0.847059 0.847059 0.847059 2 50 100 %_BS
%_0.180392 0.133333 0.129412 0 0.847059 0.847059 0.847059 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 205)
(Unnamed gradient 205) 1 3 Bd
[
<
2928252423
>
<
1E1D1B1A19
>
<
1C1B1A1918
>
0
<
DDDEE0E1E2
>
<
DDDEE0E1E2
>
<
DDDEE0E1E2
>
4 %_Br
<
232221201F1D1C1B191817151412110F0E
>
<
19191817161514131211100F0E0D0C0B0A
>
<
181716151514131210100F0E0D0C0B0A0A
>
0
<
E2E3E4E5E6E7E8E9EBECEDEEEFF0F1F2F3
>
<
E2E3E4E5E6E7E8E9EBECEDEEEFF0F1F2F3
>
<
E2E3E4E5E6E7E8E9EBECEDEEEFF0F1F2F3
>
4 %_Br
[
0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 49.4506 %_BS
%_0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 49.4506 Bs
0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 93.4066 %_BS
%_0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 93.4066 Bs
0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 %_BS
%_0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2336)
(Unnamed gradient 2336) 0 2 Bd
[
<
0000010304050607090A0B0E0F111214151718191A
>
<
00000102030405050607080A0B0C0D0E0F10111213
>
<
00000102030405050607080A0A0B0C0D0E0F101011
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F3F2F1F0EFEEEDECEBEA
>
<
FFFEFDFCFBFAF9F8F7F6F5F3F2F1F0EFEEEDECEBEA
>
<
FFFEFDFCFBFAF9F8F7F6F5F3F2F1F0EFEEEDECEBEA
>
4 %_Br
[
0.101961 0.07451 0.066667 0 0.917647 0.917647 0.917647 2 50 100 %_BS
%_0.101961 0.07451 0.066667 0 0.917647 0.917647 0.917647 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2365)
(Unnamed gradient 2365) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F1112141518191A1B1C1D1F2021222324252628292A
>
<
0000010203040505060708090A0B0C0D0E0F11121313141516171819191A1B1C1D1E1E
>
<
0000010203040505060708090A0A0B0C0D0E1010111213141515161718191A1B1B1C1D
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDC
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDC
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDC
>
4 %_Br
[
0.164706 0.117647 0.113725 0 0.862745 0.862745 0.862745 2 50 100 %_BS
%_0.164706 0.117647 0.113725 0 0.862745 0.862745 0.862745 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2369)
(Unnamed gradient 2369) 0 2 Bd
[
<
2928262524232221201F1D1B1A191817151412110F0E
>
<
1E1D1C1B1A19191817161513131211100F0E0D0C0B0A
>
<
1C1B1B1A19181716151514121110100F0E0D0C0B0A0A
>
0
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
4 %_Br
[
0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 %_BS
%_0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 Bs
0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 0 %_BS
%_0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101030303030304040404050505060606070707
09090A0A0B0B0C0C0E0E0F0F1112121415171718191A1B1C1D1F20212223242528292A2C2D2E3032
3436383B3C3E41
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101020202020203030303040404050505050505
06060707080809090A0A0B0B0C0D0D0E0F101011121313141516171819191A1B1D1E1E2021222324
2627292B2C2E30
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101020202020203030303040404050505050505
06060707080809090A0A0A0A0B0C0C0D0E0F0F1010111213141515161718191A1B1C1D1F20212223
2526282A2B2D2E
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8
F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEEEDEDECEBEAE9E8E7E6E5E4E3E2E1E0DEDDDCDAD9D8D6D5
D3D2D0CECDCBC9
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8
F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEEEDEDECEBEAE9E8E7E6E5E4E3E2E1E0DEDDDCDAD9D8D6D5
D3D2D0CECDCBC9
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFBFBFBFBFAFAFAF9F9F9F8F8F8
F7F7F6F6F5F5F4F4F3F3F2F2F1F0F0EFEEEDEDECEBEAE9E8E7E6E5E4E3E2E1E0DEDDDCDAD9D8D6D5
D3D2D0CECDCBC9
>
4 %_Br
[
0 0 0 0 1 1 1 2 85 1.1236 %_BS
%_0 0 0 0 1 1 1 2 85 1.1236 Bs
0.254902 0.188235 0.180392 0 0.788235 0.788235 0.788235 2 50 100 %_BS
%_0.254902 0.188235 0.180392 0 0.788235 0.788235 0.788235 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 1 2 Bd
[
<
1718191A1B1C1D20212223242526
>
<
10111213131415171819191A1B1C
>
<
0F10101112131415161718191A1B
>
0
<
EDECEBEAE9E8E7E5E4E3E2E1E0DF
>
<
EDECEBEAE9E8E7E5E4E3E2E1E0DF
>
<
EDECEBEAE9E8E7E5E4E3E2E1E0DF
>
4 %_Br
[
0.090196 0.062745 0.058824 0 0.929412 0.929412 0.929412 2 50 0 %_BS
%_0.090196 0.062745 0.058824 0 0.929412 0.929412 0.929412 2 50 0 Bs
0.14902 0.109804 0.105882 0 0.87451 0.87451 0.87451 2 50 100 %_BS
%_0.14902 0.109804 0.105882 0 0.87451 0.87451 0.87451 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 89)
(Unnamed gradient 89) 0 3 Bd
[
<
2928262524232221201F1D1B1A191817151412110F0E
>
<
1E1D1C1B1A19191817161513131211100F0E0D0C0B0A
>
<
1C1B1B1A19181716151514121110100F0E0D0C0B0A0A
>
0
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
4 %_Br
<
2324252829
>
<
191A1B1D1E
>
<
18191A1B1C
>
0
<
E2E1E0DEDD
>
<
E2E1E0DEDD
>
<
E2E1E0DEDD
>
4 %_Br
[
0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 %_BS
%_0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 Bs
0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 54.3956 %_BS
%_0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 54.3956 Bs
0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 0 %_BS
%_0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1)
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F21222324252628292A2B2C2D2E2F
303233343637383A3B3C3D3E
>
<
0000010203040505060708090A0B0C0D0E0F10111213131415161819191A1B1C1D1E1E1F20212223
232425262728292A2B2C2D2E
>
<
0000010203040505060708090A0A0B0C0D0E0F10101112131415161718191A1B1B1C1D1E1F202121
22232425262728292A2B2C2D
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
4 %_Br
[
0.243137 0.180392 0.176471 0 0.796078 0.796078 0.796078 2 50 100 %_BS
%_0.243137 0.180392 0.176471 0 0.796078 0.796078 0.796078 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3)
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3) 0 3 Bd
[
<
2928262524232221201F1D1B1A191817151412110F0E
>
<
1E1D1C1B1A19191817161513131211100F0E0D0C0B0A
>
<
1C1B1B1A19181716151514121110100F0E0D0C0B0A0A
>
0
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
<
DDDEDFE0E1E2E3E4E5E6E7E9EAEBECEDEEEFF0F1F2F3
>
4 %_Br
<
2324252829
>
<
191A1B1D1E
>
<
18191A1B1C
>
0
<
E2E1E0DEDD
>
<
E2E1E0DEDD
>
<
E2E1E0DEDD
>
4 %_Br
[
0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 %_BS
%_0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 2 50 100 Bs
0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 49.4506 %_BS
%_0.160784 0.117647 0.109804 0 0.866667 0.866667 0.866667 2 50 49.4506 Bs
0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 0 %_BS
%_0.137255 0.098039 0.094118 0 0.886275 0.886275 0.886275 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4)
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F21222324252628292A2B2C2D2E2F
303233343637383A3B3C3D3E
>
<
0000010203040505060708090A0B0C0D0E0F10111213131415161819191A1B1C1D1E1E1F20212223
232425262728292A2B2C2D2E
>
<
0000010203040505060708090A0A0B0C0D0E0F10101112131415161718191A1B1B1C1D1E1F202121
22232425262728292A2B2C2D
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCB
>
4 %_Br
[
0.243137 0.180392 0.176471 0 0.796078 0.796078 0.796078 2 50 100 %_BS
%_0.243137 0.180392 0.176471 0 0.796078 0.796078 0.796078 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5)
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 0 2 Bd
[
<
0000010304050607090A0B0C0E0F111214151718191B1C1D1F2021222324252628292A2B2C2D2E2F
3032
>
<
0000010203040505060708090A0B0C0D0E0F10111213141516171819191A1B1C1D1E1E1F20212223
2324
>
<
0000010203040505060708090A0A0B0C0D0E0F10101213141515161718191A1B1B1C1D1E1F202121
2223
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5
>
4 %_Br
[
0.196078 0.141176 0.137255 0 0.835294 0.835294 0.835294 2 50 100 %_BS
%_0.196078 0.141176 0.137255 0 0.835294 0.835294 0.835294 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.858823 0.85098 0.788235 1 ([\721\756\742\754\745\771\745\755\750\745] 1) 0 Xs
([\721\756\742\754\745\771\745\755\750\745] 1)
Pc
0 0 0 0 1 1 1 Xa
(\701\745\753\773\751)
Pc
Bb
2 (New Gradient Swatch 107) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 107)
Pc
Bb
2 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5)
Pc
Bb
2 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3)
Pc
Bb
2 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4)
Pc
Bb
2 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(M1 Studio - Scene) Ln
0 A
u
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
276.5464 1056.7075 m
276.5464 983.1143 216.8838 923.4536 143.2876 923.4536 c
69.6914 923.4536 10.0303 983.1143 10.0303 1056.7075 c
10.0303 1130.3105 69.6914 1189.9707 143.2876 1189.9707 c
216.8838 1189.9707 276.5464 1130.3105 276.5464 1056.7075 c
Bb
1 (New Gradient Swatch 107) 143.2886 1189.9707 -90 266.5171 1 0 0 1 0 0 Bg
-0.000012 -266.5171 -270.5161 0.000012 278.5464 1189.9707 Xm
-0.000338 -7737.7886 -270.5161 0.000012 278.5469 8927.7588 Bc
-0.000012 -266.5171 -270.5161 0.000012 278.5464 1189.9707 Bm
-0.000338 -7737.7886 -270.5161 0.000012 278.5464 923.4536 Bc
f
0 BB
*u
0 Ap
1 D
0 g
271.6245 1110.9331 m
268.1357 1119.1914 263.8105 1127.1533 258.7813 1134.6006 c
253.7993 1141.9717 248.0791 1148.9043 241.7798 1155.2041 c
235.478 1161.5068 228.5439 1167.2295 221.1733 1172.2061 c
213.7256 1177.2349 205.7651 1181.5581 197.5078 1185.0518 c
180.3286 1192.3145 162.0869 1196.002 143.2876 1196.002 c
124.4897 1196.002 106.2451 1192.3145 89.0669 1185.0518 c
80.8096 1181.5581 72.8457 1177.2349 65.4023 1172.2061 c
58.0298 1167.2266 51.0967 1161.5068 44.7959 1155.2041 c
38.4976 1148.9072 32.7769 1141.9736 27.7954 1134.5986 c
22.7632 1127.1514 18.4409 1119.1885 14.9521 1110.9331 c
7.68408 1093.7539 4 1075.5122 4 1056.7109 c
4 1037.915 7.68408 1019.6724 14.9521 1002.4902 c
18.4409 994.2339 22.7632 986.2725 27.7954 978.8247 c
32.7769 971.4517 38.4976 964.519 44.7959 958.2212 c
51.0967 951.9199 58.0298 946.1987 65.4023 941.2227 c
72.8457 936.1904 80.8096 931.8682 89.0669 928.3735 c
106.2451 921.1074 124.4897 917.4243 143.2876 917.4243 c
162.0869 917.4243 180.3267 921.1074 197.5078 928.3735 c
205.7651 931.8652 213.7256 936.1904 221.1733 941.2227 c
228.5464 946.1987 235.478 951.9199 241.7798 958.2212 c
248.0791 964.519 253.7993 971.4517 258.7813 978.8247 c
263.8105 986.2725 268.1309 994.2339 271.6245 1002.4902 c
278.8926 1019.6724 282.5767 1037.915 282.5767 1056.7109 c
282.5767 1075.5122 278.8926 1093.7539 271.6245 1110.9331 c
f
0 D
263.3389 1005.9976 m
260.0688 998.2778 256.0264 990.8296 251.3242 983.8638 c
246.6621 976.9688 241.311 970.4805 235.4146 964.5835 c
229.5195 958.6929 223.0356 953.3369 216.1372 948.6777 c
209.1685 943.9727 201.7231 939.9292 194.0044 936.665 c
177.9351 929.8711 160.874 926.4248 143.2876 926.4248 c
125.7026 926.4248 108.6357 929.8711 92.5723 936.665 c
84.8506 939.9292 77.4082 943.9727 70.4395 948.6777 c
63.541 953.3369 57.0571 958.6929 51.1621 964.5835 c
45.2656 970.4805 39.9155 976.9688 35.2534 983.8638 c
30.5474 990.8296 26.5078 998.2778 23.2402 1005.9976 c
16.4448 1022.063 12.9995 1039.124 12.9995 1056.7109 c
12.9995 1074.3013 16.4448 1091.3623 23.2402 1107.4287 c
26.5078 1115.1484 30.5474 1122.5957 35.2534 1129.5596 c
39.9155 1136.4609 45.2656 1142.9448 51.1621 1148.8398 c
57.0571 1154.7354 63.541 1160.0864 70.4395 1164.7456 c
77.4082 1169.4531 84.8506 1173.4961 92.5723 1176.7607 c
108.6357 1183.5542 125.7026 1187.0015 143.2876 1187.0015 c
160.874 1187.0015 177.9351 1183.5542 194.0044 1176.7607 c
201.7231 1173.4961 209.1685 1169.4531 216.1372 1164.7456 c
223.0356 1160.0864 229.5195 1154.7354 235.4146 1148.8398 c
241.311 1142.9448 246.6621 1136.4609 251.3242 1129.5596 c
256.0264 1122.5957 260.0688 1115.1484 263.3389 1107.4287 c
270.1299 1091.3623 273.5771 1074.3013 273.5771 1056.7109 c
273.5771 1039.124 270.1299 1022.063 263.3389 1005.9976 c
Bb
1 (Unnamed gradient 89) 143.2886 917.4243 90 278.5776 1 0 0 1 0 0 Bg
-0.000012 278.5776 282.5767 0.000012 2 917.4243 Xm
-0.000338 7737.7886 282.5767 0.000012 2.00049 -6820.3643 Bc
-0.000007 151.534 282.5767 0.000012 2 917.4243 Bm
-0.000006 127.0436 282.5767 0.000012 2 1068.9585 Bm
-0.000338 7737.7886 282.5767 0.000012 2 1196.002 Bc
f
0 BB
*U
u
1 D
0.101961 0.07451 0.066667 0 0.917647 0.917647 0.917647 Xa
143.2876 943.8896 m
205.5947 943.8896 256.1104 994.4063 256.1104 1056.7129 c
256.1104 1119.0249 205.5947 1169.5356 143.2876 1169.5356 c
80.9771 1169.5356 30.4663 1119.0249 30.4663 1056.7129 c
30.4663 994.4063 80.9771 943.8896 143.2876 943.8896 c
f
0 D
30.626 1062.7656 m
53.1401 1051.7808 79.6787 1045.4316 108.0996 1045.4316 c
167.0786 1045.4316 217.9639 1072.7412 241.5449 1112.186 C
222.1753 1146.4238 185.4331 1169.5356 143.2876 1169.5356 c
83.0029 1169.5356 33.7695 1122.2607 30.626 1062.7656 C
Bb
1 (Unnamed gradient 2336) 94.7876 1159.0103 -60 129.1289 1 0 0 1 0 0 Bg
64.5644 -111.8289 -183.3512 -105.8578 186.6104 1212.0239 Xm
3852.1472 -6672.1157 -183.3512 -105.8578 -3665.5369 7884.1396 Bc
64.5644 -111.8289 -183.3512 -105.8578 186.6104 1212.0239 Bm
3852.1472 -6672.1157 -183.3512 -105.8578 251.1748 1100.1948 Bc
f
0 BB
U
U
u
0 0 0 0 1 1 1 Xa
520.1973 917.4263 m
375.3281 917.4263 L
338.4624 917.4263 308.4746 947.416 308.4746 984.2803 C
308.4746 1129.1504 L
308.4746 1166.0132 338.4624 1195.999 375.3281 1195.999 C
520.1973 1195.999 L
557.0635 1195.999 587.0508 1166.0132 587.0508 1129.1504 C
587.0508 984.2803 L
587.0508 947.416 557.0635 917.4263 520.1973 917.4263 C
520.1973 917.4263 L
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (B) XT
0 0 0 0 0.996078 0.996078 0.996078 Xa
520.0391 917.7178 m
375.479 917.7178 L
338.6924 917.7178 308.7603 947.645 308.7603 984.4297 C
308.7603 1128.9995 L
308.7603 1165.7832 338.6924 1195.7134 375.479 1195.7134 C
520.0391 1195.7134 L
556.8296 1195.7134 586.7598 1165.7832 586.7598 1128.9995 C
586.7598 984.4297 L
586.7598 947.645 556.8296 917.7178 520.0391 917.7178 C
520.0391 917.7178 L
f
0.003922 0.003922 0.003922 0 0.992157 0.992157 0.992157 Xa
519.8882 918.0024 m
375.6274 918.0024 L
338.9238 918.0024 309.0557 947.873 309.0557 984.5845 C
309.0557 1128.8477 L
309.0557 1165.5513 338.9238 1195.417 375.6274 1195.417 C
519.8882 1195.417 L
556.6025 1195.417 586.4673 1165.5513 586.4673 1128.8477 C
586.4673 984.5845 L
586.4673 947.873 556.6025 918.0024 519.8882 918.0024 C
519.8882 918.0024 L
f
519.7383 918.2949 m
375.7822 918.2949 L
339.1538 918.2949 309.3457 948.103 309.3457 984.7349 C
309.3457 1128.6953 L
309.3457 1165.3213 339.1538 1195.1274 375.7822 1195.1274 C
519.7383 1195.1274 L
556.3677 1195.1274 586.1758 1165.3213 586.1758 1128.6953 C
586.1758 984.7349 L
586.1758 948.103 556.3677 918.2949 519.7383 918.2949 C
519.7383 918.2949 L
f
0.011765 0.007843 0.007843 0 0.988235 0.988235 0.988235 Xa
519.584 918.5918 m
375.9365 918.5918 L
339.3779 918.5918 309.6421 948.3301 309.6421 984.8838 C
309.6421 1128.5405 L
309.6421 1165.0947 339.3779 1194.833 375.9365 1194.833 C
519.584 1194.833 L
556.1377 1194.833 585.8833 1165.0947 585.8833 1128.5405 C
585.8833 984.8838 L
585.8833 948.3301 556.1377 918.5918 519.584 918.5918 C
519.584 918.5918 L
f
0.015686 0.011765 0.011765 0 0.984314 0.984314 0.984314 Xa
519.4331 918.8862 m
376.0815 918.8862 L
339.6099 918.8862 309.9375 948.5615 309.9375 985.04 C
309.9375 1128.3931 L
309.9375 1164.8633 339.6099 1194.5439 376.0815 1194.5439 C
519.4331 1194.5439 L
555.9136 1194.5439 585.5889 1164.8633 585.5889 1128.3931 C
585.5889 985.04 L
585.5889 948.5615 555.9136 918.8862 519.4331 918.8862 C
519.4331 918.8862 L
f
0.019608 0.015686 0.015686 0 0.980392 0.980392 0.980392 Xa
519.2837 919.1699 m
376.2383 919.1699 L
339.8379 919.1699 310.2261 948.7915 310.2261 985.188 C
310.2261 1128.2383 L
310.2261 1164.6357 339.8379 1194.2495 376.2383 1194.2495 C
519.2837 1194.2495 L
555.6816 1194.2495 585.2886 1164.6357 585.2886 1128.2383 C
585.2886 985.188 L
585.2886 948.7915 555.6816 919.1699 519.2837 919.1699 C
519.2837 919.1699 L
f
0.023529 0.019608 0.019608 0 0.976471 0.976471 0.976471 Xa
519.1309 919.4683 m
376.3906 919.4683 L
340.0698 919.4683 310.5156 949.0234 310.5156 985.3477 C
310.5156 1128.0869 L
310.5156 1164.4087 340.0698 1193.9551 376.3906 1193.9551 C
519.1309 1193.9551 L
555.4487 1193.9551 585.0073 1164.4087 585.0073 1128.0869 C
585.0073 985.3477 L
585.0073 949.0234 555.4487 919.4683 519.1309 919.4683 C
519.1309 919.4683 L
f
0.027451 0.019608 0.019608 0 0.972549 0.972549 0.972549 Xa
518.9805 919.7646 m
376.5415 919.7646 L
340.3018 919.7646 310.8076 949.2505 310.8076 985.498 C
310.8076 1127.9321 L
310.8076 1164.1816 340.3018 1193.6626 376.5415 1193.6626 C
518.9805 1193.6626 L
555.2236 1193.6626 584.7119 1164.1816 584.7119 1127.9321 C
584.7119 985.498 L
584.7119 949.2505 555.2236 919.7646 518.9805 919.7646 C
518.9805 919.7646 L
f
518.8198 920.061 m
376.6909 920.061 L
340.5259 920.061 311.105 949.4795 311.105 985.6499 C
311.105 1127.7842 L
311.105 1163.9438 340.5259 1193.373 376.6909 1193.373 C
518.8198 1193.373 L
554.9961 1193.373 584.4185 1163.9438 584.4185 1127.7842 C
584.4185 985.6499 L
584.4185 949.4795 554.9961 920.061 518.8198 920.061 C
518.8198 920.061 L
f
0.035294 0.023529 0.023529 0 0.968627 0.968627 0.968627 Xa
518.6729 920.3516 m
376.8457 920.3516 L
340.7578 920.3516 311.3945 949.7144 311.3945 985.8022 C
311.3945 1127.6299 L
311.3945 1163.7197 340.7578 1193.0811 376.8457 1193.0811 C
518.6729 1193.0811 L
554.7627 1193.0811 584.123 1163.7197 584.123 1127.6299 C
584.123 985.8022 L
584.123 949.7144 554.7627 920.3516 518.6729 920.3516 C
518.6729 920.3516 L
f
0.039216 0.027451 0.027451 0 0.964706 0.964706 0.964706 Xa
518.5254 920.6406 m
377 920.6406 L
340.9858 920.6406 311.6899 949.9375 311.6899 985.9482 C
311.6899 1127.4771 L
311.6899 1163.4868 340.9858 1192.7856 377 1192.7856 C
518.5254 1192.7856 L
554.5361 1192.7856 583.8286 1163.4868 583.8286 1127.4771 C
583.8286 985.9482 L
583.8286 949.9375 554.5361 920.6406 518.5254 920.6406 C
518.5254 920.6406 L
f
0.043137 0.031373 0.031373 0 0.960784 0.960784 0.960784 Xa
518.3657 920.9321 m
377.1528 920.9321 L
341.2197 920.9321 311.9814 950.1694 311.9814 986.1045 C
311.9814 1127.3203 L
311.9814 1163.2578 341.2197 1192.4912 377.1528 1192.4912 C
518.3657 1192.4912 L
554.3032 1192.4912 583.5425 1163.2578 583.5425 1127.3203 C
583.5425 986.1045 L
583.5425 950.1694 554.3032 920.9321 518.3657 920.9321 C
518.3657 920.9321 L
f
0.047059 0.035294 0.035294 0 0.956863 0.956863 0.956863 Xa
518.2163 921.2246 m
377.3008 921.2246 L
341.4443 921.2246 312.2725 950.4033 312.2725 986.2573 C
312.2725 1127.1748 L
312.2725 1163.0259 341.4443 1192.1997 377.3008 1192.1997 C
518.2163 1192.1997 L
554.0762 1192.1997 583.249 1163.0259 583.249 1127.1748 C
583.249 986.2573 L
583.249 950.4033 554.0762 921.2246 518.2163 921.2246 C
518.2163 921.2246 L
f
0.054902 0.039216 0.039216 0 0.952941 0.952941 0.952941 Xa
518.0664 921.519 m
377.4551 921.519 L
341.6714 921.519 312.562 950.623 312.562 986.4102 C
312.562 1127.0186 L
312.562 1162.7979 341.6714 1191.9072 377.4551 1191.9072 C
518.0664 1191.9072 L
553.8462 1191.9072 582.9536 1162.7979 582.9536 1127.0186 C
582.9536 986.4102 L
582.9536 950.623 553.8462 921.519 518.0664 921.519 C
518.0664 921.519 L
f
517.9106 921.8164 m
377.6079 921.8164 L
341.9033 921.8164 312.8594 950.8584 312.8594 986.5645 C
312.8594 1126.8677 L
312.8594 1162.5669 341.9033 1191.6162 377.6079 1191.6162 C
517.9106 1191.6162 L
553.6172 1191.6162 582.6631 1162.5669 582.6631 1126.8677 C
582.6631 986.5645 L
582.6631 950.8584 553.6172 921.8164 517.9106 921.8164 C
517.9106 921.8164 L
f
0.058824 0.043137 0.039216 0 0.94902 0.94902 0.94902 Xa
517.7563 922.1035 m
377.7583 922.1035 L
342.1333 922.1035 313.1519 951.0923 313.1519 986.7153 C
313.1519 1126.7109 L
313.1519 1162.3418 342.1333 1191.3237 377.7583 1191.3237 C
517.7563 1191.3237 L
553.3843 1191.3237 582.375 1162.3418 582.375 1126.7109 C
582.375 986.7153 L
582.375 951.0923 553.3843 922.1035 517.7563 922.1035 C
517.7563 922.1035 L
f
0.066667 0.047059 0.043137 0 0.945098 0.945098 0.945098 Xa
517.6143 922.3921 m
377.9092 922.3921 L
342.3701 922.3921 313.4404 951.314 313.4404 986.8628 C
313.4404 1126.5664 L
313.4404 1162.1182 342.3701 1191.0342 377.9092 1191.0342 C
517.6143 1191.0342 L
553.1621 1191.0342 582.0796 1162.1182 582.0796 1126.5664 C
582.0796 986.8628 L
582.0796 951.314 553.1621 922.3921 517.6143 922.3921 C
517.6143 922.3921 L
f
0.070588 0.05098 0.047059 0 0.941176 0.941176 0.941176 Xa
517.457 922.6875 m
378.0605 922.6875 L
342.5972 922.6875 313.7354 951.5439 313.7354 987.0176 C
313.7354 1126.4116 L
313.7354 1161.8804 342.5972 1190.7368 378.0605 1190.7368 C
517.457 1190.7368 L
552.9282 1190.7368 581.7881 1161.8804 581.7881 1126.4116 C
581.7881 987.0176 L
581.7881 951.5439 552.9282 922.6875 517.457 922.6875 C
517.457 922.6875 L
f
0.078431 0.054902 0.05098 0 0.937255 0.937255 0.937255 Xa
517.3052 922.98 m
378.2134 922.98 L
342.8252 922.98 314.0327 951.7817 314.0327 987.167 C
314.0327 1126.2588 L
314.0327 1161.6504 342.8252 1190.4453 378.2134 1190.4453 C
517.3052 1190.4453 L
552.6982 1190.4453 581.4907 1161.6504 581.4907 1126.2588 C
581.4907 987.167 L
581.4907 951.7817 552.6982 922.98 517.3052 922.98 C
517.3052 922.98 L
f
0.082353 0.058824 0.054902 0 0.933333 0.933333 0.933333 Xa
517.1465 923.2764 m
378.3652 923.2764 L
343.0522 923.2764 314.3193 952.0059 314.3193 987.3198 C
314.3193 1126.1074 L
314.3193 1161.4253 343.0522 1190.1514 378.3652 1190.1514 C
517.1465 1190.1514 L
552.4717 1190.1514 581.1953 1161.4253 581.1953 1126.1074 C
581.1953 987.3198 L
581.1953 952.0059 552.4717 923.2764 517.1465 923.2764 C
517.1465 923.2764 L
f
516.998 923.5635 m
378.5195 923.5635 L
343.2813 923.5635 314.6138 952.2329 314.6138 987.4775 C
314.6138 1125.957 L
314.6138 1161.1963 343.2813 1189.8618 378.5195 1189.8618 C
516.998 1189.8618 L
552.2363 1189.8618 580.9121 1161.1963 580.9121 1125.957 C
580.9121 987.4775 L
580.9121 952.2329 552.2363 923.5635 516.998 923.5635 C
516.998 923.5635 L
f
0.094118 0.066667 0.062745 0 0.92549 0.92549 0.92549 Xa
516.8472 923.8579 m
378.6704 923.8579 L
343.5112 923.8579 314.9063 952.4678 314.9063 987.625 C
314.9063 1125.8022 L
314.9063 1160.9692 343.5112 1189.5713 378.6704 1189.5713 C
516.8472 1189.5713 L
552.0098 1189.5713 580.6177 1160.9692 580.6177 1125.8022 C
580.6177 987.625 L
580.6177 952.4678 552.0098 923.8579 516.8472 923.8579 C
516.8472 923.8579 L
f
516.6929 924.1504 m
378.8228 924.1504 L
343.7378 924.1504 315.1982 952.6909 315.1982 987.7739 C
315.1982 1125.6475 L
315.1982 1160.7324 343.7378 1189.2769 378.8228 1189.2769 C
516.6929 1189.2769 L
551.7808 1189.2769 580.3232 1160.7324 580.3232 1125.6475 C
580.3232 987.7739 L
580.3232 952.6909 551.7808 924.1504 516.6929 924.1504 C
516.6929 924.1504 L
f
0.098039 0.070588 0.062745 0 0.921569 0.921569 0.921569 Xa
516.5439 924.4448 m
378.9775 924.4448 L
343.9707 924.4448 315.4878 952.9248 315.4878 987.9282 C
315.4878 1125.499 L
315.4878 1160.5044 343.9707 1188.9854 378.9775 1188.9854 C
516.5439 1188.9854 L
551.5547 1188.9854 580.0278 1160.5044 580.0278 1125.499 C
580.0278 987.9282 L
580.0278 952.9248 551.5547 924.4448 516.5439 924.4448 C
516.5439 924.4448 L
f
516.3965 924.7412 m
379.1323 924.7412 L
344.2026 924.7412 315.7852 953.1567 315.7852 988.0811 C
315.7852 1125.3511 L
315.7852 1160.2754 344.2026 1188.6934 379.1323 1188.6934 C
516.3965 1188.6934 L
551.3188 1188.6934 579.7363 1160.2754 579.7363 1125.3511 C
579.7363 988.0811 L
579.7363 953.1567 551.3188 924.7412 516.3965 924.7412 C
516.3965 924.7412 L
f
0.105882 0.07451 0.070588 0 0.913725 0.913725 0.913725 Xa
516.2368 925.0254 m
379.2817 925.0254 L
344.4307 925.0254 316.0767 953.3818 316.0767 988.2354 C
316.0767 1125.1963 L
316.0767 1160.0435 344.4307 1188.396 379.2817 1188.396 C
516.2368 1188.396 L
551.0967 1188.396 579.4492 1160.0435 579.4492 1125.1963 C
579.4492 988.2354 L
579.4492 953.3818 551.0967 925.0254 516.2368 925.0254 C
516.2368 925.0254 L
f
516.0894 925.3228 m
379.4365 925.3228 L
344.6587 925.3228 316.374 953.6133 316.374 988.3823 C
316.374 1125.0439 L
316.374 1159.8174 344.6587 1188.1035 379.4365 1188.1035 C
516.0894 1188.1035 L
550.8608 1188.1035 579.1577 1159.8174 579.1577 1125.0439 C
579.1577 988.3823 L
579.1577 953.6133 550.8608 925.3228 516.0894 925.3228 C
516.0894 925.3228 L
f
0.113725 0.082353 0.078431 0 0.905882 0.905882 0.905882 Xa
515.9346 925.6123 m
379.5859 925.6123 L
344.8828 925.6123 316.6636 953.8403 316.6636 988.5352 C
316.6636 1124.8892 L
316.6636 1159.5869 344.8828 1187.814 379.5859 1187.814 C
515.9346 1187.814 L
550.6289 1187.814 578.8623 1159.5869 578.8623 1124.8892 C
578.8623 988.5352 L
578.8623 953.8403 550.6289 925.6123 515.9346 925.6123 C
515.9346 925.6123 L
f
515.7817 925.9067 m
379.7349 925.9067 L
345.1226 925.9067 316.9546 954.0674 316.9546 988.6914 C
316.9546 1124.7368 L
316.9546 1159.3535 345.1226 1187.5254 379.7349 1187.5254 C
515.7817 1187.5254 L
550.4028 1187.5254 578.5649 1159.3535 578.5649 1124.7368 C
578.5649 988.6914 L
578.5649 954.0674 550.4028 925.9067 515.7817 925.9067 C
515.7817 925.9067 L
f
0.121569 0.086275 0.082353 0 0.901961 0.901961 0.901961 Xa
515.6323 926.1958 m
379.8916 926.1958 L
345.3486 926.1958 317.2441 954.2964 317.2441 988.8394 C
317.2441 1124.5869 L
317.2441 1159.127 345.3486 1187.2275 379.8916 1187.2275 C
515.6323 1187.2275 L
550.1729 1187.2275 578.2705 1159.127 578.2705 1124.5869 C
578.2705 988.8394 L
578.2705 954.2964 550.1729 926.1958 515.6323 926.1958 C
515.6323 926.1958 L
f
0.12549 0.090196 0.082353 0 0.898039 0.898039 0.898039 Xa
515.4775 926.4883 m
380.042 926.4883 L
345.5776 926.4883 317.5396 954.5342 317.5396 988.9971 C
317.5396 1124.4326 L
317.5396 1158.8979 345.5776 1186.938 380.042 1186.938 C
515.4775 1186.938 L
549.9434 1186.938 577.9839 1158.8979 577.9839 1124.4326 C
577.9839 988.9971 L
577.9839 954.5342 549.9434 926.4883 515.4775 926.4883 C
515.4775 926.4883 L
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (A) XT
515.4775 926.4883 m
380.042 926.4883 L
345.5776 926.4883 317.5396 954.5342 317.5396 988.9971 C
317.5396 1124.4326 L
317.5396 1158.8979 345.5776 1186.938 380.042 1186.938 C
515.4775 1186.938 L
549.9434 1186.938 577.9839 1158.8979 577.9839 1124.4326 C
577.9839 988.9971 L
577.9839 954.5342 549.9434 926.4883 515.4775 926.4883 C
515.4775 926.4883 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 447.7617 1056.7129 0 130.2234 1 0 0 1 0 0 Bg
130.2234 0 0 -130.2234 447.7617 1056.7129 Bm
f
0 BB
1 Ap
567.9082 988.9897 m
567.9082 960.04 544.4297 936.5693 515.4775 936.5693 C
380.042 936.5693 L
351.0894 936.5693 327.6133 960.04 327.6133 988.9897 C
327.6133 1124.4326 L
327.6133 1153.3892 351.0894 1176.8633 380.042 1176.8633 C
515.4775 1176.8633 L
544.4297 1176.8633 567.9082 1153.3892 567.9082 1124.4326 C
567.9082 988.9897 L
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 447.7607 1176.8633 -90 240.2939 1 0 0 1 0 0 Bg
-0.000011 -240.2939 -244.2949 0.000011 569.9082 1176.8633 Xm
-0.000352 -8042.2607 -244.2949 0.000011 569.9087 9219.124 Bc
-0.000011 -240.2939 -244.2949 0.000011 569.9082 1176.8633 Bm
-0.000352 -8042.2607 -244.2949 0.000011 569.9082 936.5693 Bc
f
0 BB
0 Ap
437.001 1075.4209 m
395.3154 1087.5903 358.1567 1105.8213 327.7124 1127.6426 C
327.6489 1126.584 327.6133 1125.5186 327.6133 1124.4326 C
327.6133 988.9897 L
327.6133 960.04 351.0894 936.5693 380.042 936.5693 C
515.4775 936.5693 L
544.4297 936.5693 567.9082 960.04 567.9082 988.9897 C
567.9082 1061.4473 L
527.7241 1057.8276 482.6953 1062.0884 437.001 1075.4209 c
Bb
1 (Unnamed gradient 2365) 447.7607 936.5693 90 191.0732 1 0 0 1 0 0 Bg
-0.000008 191.0732 244.2949 0.000011 325.6133 936.5693 Xm
-0.000352 8042.2603 244.2949 0.000011 325.6138 -7105.6914 Bc
-0.000008 191.0732 244.2949 0.000011 325.6133 936.5693 Bm
-0.000352 8042.2603 244.2949 0.000011 325.6133 1127.6426 Bc
f
0 BB
U
u
1 Ap
1 XR
879.127 1056.7129 m
879.127 986.6367 822.3154 929.8267 752.2373 929.8267 c
682.1621 929.8267 625.3535 986.6367 625.3535 1056.7129 c
625.3535 1126.7891 682.1621 1183.5967 752.2373 1183.5967 c
822.3154 1183.5967 879.127 1126.7891 879.127 1056.7129 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4) 752.2402 929.8267 90 253.77 1 0 0 1 0 0 Bg
-0.000011 253.77 257.7734 0.000011 623.3535 929.8267 Xm
-0.000365 8346.7402 257.7734 0.000011 623.3535 -7416.9141 Bc
-0.000011 253.77 257.7734 0.000011 623.3535 929.8267 Bm
-0.000365 8346.7402 257.7734 0.000011 623.3535 1183.5967 Bc
f
0 BB
*u
0 Ap
1 D
0 g
752.2373 1196.002 m
675.4346 1196.002 612.9482 1133.5151 612.9482 1056.7129 c
612.9482 979.9053 675.4346 917.4243 752.2373 917.4243 c
829.04 917.4243 891.5264 979.9053 891.5264 1056.7129 c
891.5264 1133.5151 829.04 1196.002 752.2373 1196.002 c
f
0 D
752.2373 936.1709 m
685.6631 936.1709 631.6924 990.1406 631.6924 1056.7129 c
631.6924 1123.2847 685.6631 1177.2544 752.2373 1177.2544 c
818.8057 1177.2544 872.7822 1123.2847 872.7822 1056.7129 c
872.7822 990.1406 818.8057 936.1709 752.2373 936.1709 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3) 752.2373 917.4243 90 278.5776 1 0 0 1 0 0 Bg
-0.000012 278.5776 282.5781 0.000012 610.9482 917.4243 Xm
-0.000365 8346.7373 282.5781 0.000012 610.9482 -7429.3125 Bc
-0.000006 137.7583 282.5781 0.000012 610.9482 917.4243 Bm
-0.000006 140.8193 282.5781 0.000012 610.9482 1055.1826 Bm
-0.000365 8346.7373 282.5781 0.000012 610.9482 1196.002 Bc
f
0 BB
*U
797.8311 1063.3555 m
824.8809 1046.1807 852.1465 1038.7822 878.2432 1037.8447 C
878.7168 1042.3135 878.9668 1046.8521 878.9668 1051.4468 c
878.9668 1121.5234 822.1553 1178.3359 752.0889 1178.3359 c
691.9727 1178.3359 641.6309 1136.5352 628.5283 1080.4214 C
664.5088 1100.5156 721.5479 1111.7896 797.8311 1063.3555 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 753.748 1178.3359 -90 140.4912 1 0 0 1 0 0 Bg
-0.000006 -140.4912 -254.4385 0.000011 880.9668 1178.3359 Xm
-0.000365 -8348.248 -254.4385 0.000011 880.9668 9526.584 Bc
-0.000006 -140.4912 -254.4385 0.000011 880.9668 1178.3359 Bm
-0.000365 -8348.248 -254.4385 0.000011 880.9668 1037.8447 Bc
f
0 BB
U
u
1 Ap
0 XR
1187.6582 1056.7129 m
1187.6582 984.3921 1129.0313 925.7656 1056.7109 925.7656 c
984.3916 925.7656 925.7637 984.3921 925.7637 1056.7129 c
925.7637 1129.0322 984.3916 1187.6602 1056.7109 1187.6602 c
1129.0313 1187.6602 1187.6582 1129.0322 1187.6582 1056.7129 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 3) 1056.7109 1056.7129 0 130.9473 1 0 0 1 0 0 Bg
130.9473 0 0 -130.9473 1056.7109 1056.7129 Bm
f
0 BB
0 0 0 0 1 1 1 Xa
1158.1836 1093.5688 m
1158.1836 1046.8638 1112.7529 1009.0049 1056.7109 1009.0049 c
1000.6689 1009.0049 955.2412 1046.8638 955.2412 1093.5688 c
955.2412 1140.2686 1000.6689 1178.1289 1056.7109 1178.1289 c
1112.7529 1178.1289 1158.1836 1140.2686 1158.1836 1093.5688 c
f
0 Ap
1180.6797 1078.0518 m
1181.8633 1071.1167 1182.4922 1063.9883 1182.4922 1056.7158 c
1182.4922 987.2485 1126.1758 930.9336 1056.7109 930.9336 c
987.2471 930.9336 930.9355 987.2485 930.9355 1056.7158 c
930.9355 1063.9883 931.5586 1071.1167 932.748 1078.0518 C
928.5645 1080.8643 924.5459 1083.812 920.7129 1086.8975 C
918.5664 1077.1787 917.4238 1067.0801 917.4238 1056.7158 c
917.4238 979.7861 979.7842 917.4243 1056.7109 917.4243 c
1133.6387 917.4243 1196 979.7861 1196 1056.7158 c
1196 1067.0801 1194.8633 1077.1787 1192.71 1086.8975 C
1188.877 1083.812 1184.8584 1080.8643 1180.6797 1078.0518 C
Bb
1 (Unnamed gradient 89) 1056.7119 917.4243 90 169.4731 1 0 0 1 0 0 Bg
-0.000007 169.4731 282.5762 0.000012 915.4238 917.4243 Xm
-0.000378 8651.2119 282.5762 0.000012 915.4238 -7733.7871 Bc
-0.000004 92.1859 282.5762 0.000012 915.4238 917.4243 Bm
-0.000003 77.2872 282.5762 0.000012 915.4238 1009.6104 Bm
-0.000378 8651.2119 282.5762 0.000012 915.4238 1086.8975 Bc
f
0 BB
1056.7109 1196.001 m
990.1523 1196.001 934.5049 1149.3115 920.7129 1086.8975 C
924.5459 1083.812 928.5645 1080.8643 932.748 1078.0518 C
942.8809 1137.3535 994.5244 1182.4917 1056.7109 1182.4917 c
1118.9033 1182.4917 1170.543 1137.3535 1180.6797 1078.0518 C
1184.8584 1080.8643 1188.877 1083.812 1192.71 1086.8975 C
1178.9238 1149.3115 1123.2754 1196.001 1056.7109 1196.001 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 1056.7109 1078.0518 90 117.9492 1 0 0 1 0 0 Bg
-0.000005 117.9492 275.9971 0.000012 918.7129 1078.0518 Xm
-0.000378 8651.2109 275.9971 0.000012 918.7129 -7573.1592 Bc
-0.000005 117.9492 275.9971 0.000012 918.7129 1078.0518 Bm
-0.000378 8651.2109 275.9971 0.000012 918.7129 1196.001 Bc
f
0 BB
U
u
*u
1 D
0 g
752.2607 878.3511 m
514.8164 878.3511 321.6553 685.1895 321.6553 447.7559 c
321.6553 210.3301 514.8164 17.1699 752.2607 17.1699 c
989.6709 17.1699 1182.8184 210.3301 1182.8184 447.7559 c
1182.8184 685.1895 989.6709 878.3511 752.2607 878.3511 c
f
0 D
752.2549 59.8691 m
538.0249 59.8691 364.3501 233.5313 364.3501 447.7559 c
364.3501 661.9873 538.0249 835.6563 752.2549 835.6563 c
966.4805 835.6563 1140.1338 661.9873 1140.1338 447.7559 c
1140.1338 233.5313 966.4805 59.8691 752.2549 59.8691 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 205) 752.2363 447.7607 0 430.5864 1 0 0 1 0 0 Bg
430.5864 0 0 -430.5864 752.2363 447.7607 Bm
f
0 BB
*U
1 Ap
1152.1465 447.7715 m
1152.1465 226.9072 973.0957 47.8418 752.2354 47.8418 c
531.374 47.8418 352.3213 226.9072 352.3213 447.7715 c
352.3213 668.6309 531.374 847.6758 752.2354 847.6758 c
973.0957 847.6758 1152.1465 668.6309 1152.1465 447.7715 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1) 752.2334 47.8418 90 799.8335 1 0 0 1 0 0 Bg
-0.000035 799.8335 803.8252 0.000035 350.3208 47.8418 Xm
-0.000365 8346.7334 803.8252 0.000035 350.3213 -8298.8926 Bc
-0.000035 799.8335 803.8252 0.000035 350.3208 47.8418 Bm
-0.000365 8346.7334 803.8252 0.000035 350.3208 847.6753 Bc
f
0 BB
0.058824 0.043137 0.039216 0 0.94902 0.94902 0.94902 Xa
466.1934 592.1475 m
466.1934 473.2891 594.0093 376.9326 751.6973 376.9326 c
909.3545 376.9326 1037.1826 473.2891 1037.1826 592.1475 c
1037.1826 711.0112 909.3545 807.3706 751.6973 807.3706 c
594.0093 807.3706 466.1934 711.0112 466.1934 592.1475 c
f
U
u
282.5767 34.1182 m
282.5767 17.4785 269.0947 3.99805 252.4614 3.99805 C
34.1172 3.99805 L
17.4829 3.99805 4 17.4785 4 34.1182 C
4 252.4629 L
4 269.0947 17.4829 282.5801 34.1172 282.5801 C
252.4614 282.5801 L
269.0947 282.5801 282.5767 269.0947 282.5767 252.4629 C
282.5767 34.1182 L
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 3) 143.2886 3.99805 90 278.582 1 0 0 1 0 0 Bg
-0.000012 278.582 282.5767 0.000012 2 3.99805 Xm
-0.000338 7737.7891 282.5767 0.000012 2.00049 -7733.791 Bc
-0.000006 137.7605 282.5767 0.000012 2 3.99805 Bm
-0.000006 140.8215 282.5767 0.000012 2 141.7588 Bm
-0.000338 7737.7891 282.5767 0.000012 2 282.5801 Bc
f
0 BB
0 Ap
252.4541 270.5625 m
34.1172 270.5625 L
24.1367 270.5625 16.0146 262.4395 16.0146 252.4629 C
16.0146 144.8613 L
55.4751 138.2773 98.3931 134.6533 143.2891 134.6533 c
188.1836 134.6533 231.1025 138.2773 270.5625 144.8613 C
270.5625 252.4629 L
270.5625 262.4395 262.4404 270.5625 252.4541 270.5625 C
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 5) 143.2886 270.5625 -90 135.9092 1 0 0 1 0 0 Bg
-0.000006 -135.9092 -258.5479 0.000011 272.5625 270.5625 Xm
-0.000338 -7737.7891 -258.5479 0.000011 272.563 8008.3516 Bc
-0.000006 -135.9092 -258.5479 0.000011 272.5625 270.5625 Bm
-0.000338 -7737.7891 -258.5479 0.000011 272.5625 134.6533 Bc
f
0 BB
143.2891 134.6533 m
98.3931 134.6533 55.4751 138.2725 16.0146 144.8613 C
16.0146 34.1182 L
16.0146 24.1377 24.1367 16.0156 34.1172 16.0156 C
252.4541 16.0156 L
262.4404 16.0156 270.5625 24.1377 270.5625 34.1182 C
270.5625 144.8613 L
231.1025 138.2725 188.1836 134.6533 143.2891 134.6533 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 4) 143.2886 16.0156 90 128.8457 1 0 0 1 0 0 Bg
-0.000006 128.8457 258.5479 0.000011 14.0146 16.0156 Xm
-0.000338 7737.7891 258.5479 0.000011 14.0151 -7721.7734 Bc
-0.000006 128.8457 258.5479 0.000011 14.0146 16.0156 Bm
-0.000338 7737.7891 258.5479 0.000011 14.0146 144.8613 Bc
f
0 BB
U
u
1 Ap
280.0137 753.4385 m
280.0137 677.9263 218.8008 616.7114 143.2861 616.7114 c
67.7734 616.7114 6.56152 677.9263 6.56152 753.4385 c
6.56152 828.9507 67.7734 890.1665 143.2861 890.1665 c
218.8008 890.1665 280.0137 828.9507 280.0137 753.4385 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 1) 143.2876 753.439 0 136.7268 1 0 0 1 0 0 Bg
136.7268 0 0 -136.7268 143.2876 753.439 Bm
f
0 BB
0 Ap
0 0 0 0 1 1 1 Xa
186.1074 799.6885 m
176.0791 799.6885 164.146 799.8472 144.2139 799.8472 c
114.2896 799.8472 110.2783 799.6885 100.5996 799.5547 c
86.7651 799.5547 80.3379 804.0298 80.5562 811.8516 C
84.4819 835.9312 105.0649 855.124 131.418 859.6318 c
135.2764 860.2612 139.25 860.6001 143.3154 860.6001 c
147.3921 860.6001 151.3799 860.2583 155.2544 859.627 c
181.458 855.124 201.9507 836.1006 206.0239 812.1953 C
206.3037 805.3564 199.3105 799.6885 186.1074 799.6885 c
f
*u
1 D
0 g
143.2861 891.5244 m
66.4839 891.5244 3.99951 829.0435 3.99951 752.2402 c
3.99951 675.4336 66.4839 612.9521 143.2861 612.9521 c
220.0884 612.9521 282.5771 675.4336 282.5771 752.2402 c
282.5771 829.0435 220.0884 891.5244 143.2861 891.5244 c
f
0 D
143.2861 627.6831 m
74.5024 627.6831 18.7329 683.4473 18.7329 752.2363 c
18.7329 821.0303 74.5024 876.7881 143.2861 876.7881 c
212.0747 876.7881 267.8442 821.0303 267.8442 752.2363 c
267.8442 683.4473 212.0747 627.6831 143.2861 627.6831 c
Bb
1 (Unnamed gradient 2369) 143.2886 612.9521 90 278.5723 1 0 0 1 0 0 Bg
-0.000012 278.5723 282.5776 0.000012 1.99951 612.9521 Xm
-0.000338 7737.7886 282.5776 0.000012 2 -7124.8369 Bc
-0.000012 278.5723 282.5776 0.000012 1.99951 612.9521 Bm
-0.000338 7737.7886 282.5776 0.000012 1.99951 891.5244 Bc
f
0 BB
*U
U
u
1 Ap
276.5469 447.7617 m
276.5469 374.1689 216.8862 314.5088 143.2891 314.5088 c
69.6909 314.5088 10.0298 374.1689 10.0298 447.7617 c
10.0298 521.3633 69.6909 581.0225 143.2891 581.0225 c
216.8862 581.0225 276.5469 521.3633 276.5469 447.7617 c
Bb
1 (New Gradient Swatch 107) 143.2886 581.0225 -90 266.5137 1 0 0 1 0 0 Bg
-0.000012 -266.5137 -270.5171 0.000012 278.5469 581.0225 Xm
-0.000338 -7737.7891 -270.5171 0.000012 278.5474 8318.8115 Bc
-0.000012 -266.5137 -270.5171 0.000012 278.5469 581.0225 Bm
-0.000338 -7737.7891 -270.5171 0.000012 278.5469 314.5088 Bc
f
0 BB
257.8286 447.7617 m
257.8286 384.5059 206.5483 333.2275 143.2891 333.2275 c
80.0283 333.2275 28.748 384.5059 28.748 447.7617 c
28.748 511.0215 80.0283 562.3027 143.2891 562.3027 c
206.5483 562.3027 257.8286 511.0215 257.8286 447.7617 c
Bb
1 (\715\756\742\773\751 \756\741\760\740\747\745\766 \743\760\740\744\750\745\755\762\740 1) 143.2886 333.2275 90 229.0752 1 0 0 1 0 0 Bg
-0.00001 229.0752 233.0806 0.00001 26.748 333.2275 Xm
-0.000338 7737.7891 233.0806 0.00001 26.7485 -7404.5615 Bc
-0.00001 229.0752 233.0806 0.00001 26.748 333.2275 Bm
-0.000338 7737.7891 233.0806 0.00001 26.748 562.3027 Bc
f
0 BB
0 Ap
143.793 451.6572 m
210.0181 498.8584 249.752 453.3857 257.478 450.5088 c
257.5781 450.4717 257.6831 450.4238 257.7983 450.374 C
256.4053 512.4268 205.6743 562.3027 143.2891 562.3027 c
81.2212 562.3027 30.6904 512.9365 28.8062 451.3281 C
33.356 447.2148 80.8467 406.7949 143.793 451.6572 c
Bb
1 (Unnamed gradient 2) 28.8062 496.4912 0 228.9922 1 0 0 1 0 0 Bg
228.9922 0 0 -159.5078 28.8062 564.3027 Xm
7623.3066 0 0 -159.5078 -7594.5005 564.3027 Bc
228.9922 0 0 -159.5078 28.8062 564.3027 Bm
7623.3066 0 0 -159.5078 257.7983 564.3027 Bc
f
0 BB
*u
1 D
0 g
271.625 501.9844 m
268.1353 510.2422 263.811 518.2051 258.7813 525.6523 c
253.7998 533.0225 248.0791 539.9561 241.7803 546.2559 c
235.478 552.5576 228.5444 558.2803 221.1738 563.2559 c
213.7256 568.2871 205.7646 572.6104 197.5078 576.1025 c
180.3286 583.3662 162.0869 587.0527 143.2891 587.0527 c
124.4897 587.0527 106.2451 583.3662 89.0659 576.1025 c
80.8096 572.6104 72.8452 568.2871 65.4028 563.2559 c
58.0303 558.2783 51.0967 552.5576 44.7964 546.2559 c
38.4976 539.959 32.7773 533.0244 27.7954 525.6504 c
22.7637 518.2012 18.4404 510.2402 14.9521 501.9844 c
7.68408 484.8047 4 466.5635 4 447.7617 c
4 428.9658 7.68408 410.7236 14.9521 393.541 c
18.4404 385.2852 22.7637 377.3242 27.7954 369.877 c
32.7773 362.5029 38.4976 355.5693 44.7964 349.2734 c
51.0967 342.9697 58.0303 337.251 65.4028 332.2734 c
72.8452 327.2422 80.8096 322.9189 89.0659 319.4248 c
106.2451 312.1602 124.4897 308.4746 143.2891 308.4746 c
162.0869 308.4746 180.3267 312.1602 197.5078 319.4248 c
205.7646 322.917 213.7256 327.2422 221.1738 332.2734 c
228.5469 337.251 235.478 342.9697 241.7803 349.2734 c
248.0791 355.5693 253.7998 362.5029 258.7813 369.877 c
263.811 377.3242 268.1313 385.2852 271.625 393.541 c
278.8926 410.7236 282.5767 428.9658 282.5767 447.7617 c
282.5767 466.5635 278.8926 484.8047 271.625 501.9844 c
f
0 D
263.3389 397.0498 m
260.0688 389.3291 256.0259 381.8818 251.3232 374.916 c
246.6611 368.0195 241.311 361.5313 235.4146 355.6348 c
229.52 349.7432 223.0356 344.3887 216.1367 339.7285 c
209.1689 335.0254 201.7241 330.9814 194.0039 327.7168 c
177.9355 320.9209 160.8745 317.4766 143.2891 317.4766 c
125.7026 317.4766 108.6362 320.9209 92.5728 327.7168 c
84.8506 330.9814 77.4082 335.0254 70.4399 339.7285 c
63.541 344.3887 57.0566 349.7432 51.1621 355.6348 c
45.2656 361.5313 39.9146 368.0195 35.2524 374.916 c
30.5479 381.8818 26.5078 389.3291 23.2402 397.0498 c
16.4438 413.1143 12.9995 430.1748 12.9995 447.7617 c
12.9995 465.3525 16.4438 482.4141 23.2402 498.4795 c
26.5078 506.1982 30.5479 513.6484 35.2524 520.6113 c
39.9146 527.5117 45.2656 533.9961 51.1621 539.8906 c
57.0566 545.7861 63.541 551.1387 70.4399 555.7969 c
77.4082 560.5049 84.8506 564.5488 92.5728 567.8115 c
108.6362 574.6064 125.7026 578.0518 143.2891 578.0518 c
160.8745 578.0518 177.9355 574.6064 194.0039 567.8115 c
201.7241 564.5488 209.1689 560.5049 216.1367 555.7969 c
223.0356 551.1387 229.52 545.7861 235.4146 539.8906 c
241.311 533.9961 246.6611 527.5117 251.3232 520.6113 c
256.0259 513.6484 260.0688 506.1982 263.3389 498.4795 c
270.1299 482.4141 273.5771 465.3525 273.5771 447.7617 c
273.5771 430.1748 270.1299 413.1143 263.3389 397.0498 c
Bb
1 (Unnamed gradient 89) 143.2886 308.4746 90 278.5781 1 0 0 1 0 0 Bg
-0.000012 278.5781 282.5767 0.000012 2 308.4746 Xm
-0.000338 7737.7891 282.5767 0.000012 2.00049 -7429.3145 Bc
-0.000007 151.5343 282.5767 0.000012 2 308.4746 Bm
-0.000006 127.0439 282.5767 0.000012 2 460.0088 Bm
-0.000338 7737.7891 282.5767 0.000012 2 587.0527 Bc
f
0 BB
*U
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 R
0.858823 0.85098 0.788235 1 ([\721\756\742\754\745\771\745\755\750\745] 1) 0 XS
0 J 0 j 0.5 w 4 M []0 d0 XR
-9 0 m
-36 0 L
S
0 -9 m
0 -36 L
S
U
u
-9 1200 m
-36 1200 L
S
0 1209 m
0 1236 L
S
U
u
1209 1200 m
1236 1200 L
S
1200 1209 m
1200 1236 L
S
U
u
1209 0 m
1236 0 L
S
1200 -9 m
1200 -36 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
